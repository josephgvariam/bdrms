!function(){var n=Backbone.Model.extend({urlRoot:function(){return this.get("type")?"/api/"+this.get("type").toLowerCase()+"requests":"/api/requests"},initialize:function(){this.listenTo(this,"request",this.requestStart),this.listenTo(this,"sync",this.requestSuccess),this.listenTo(this,"error",this.requestError),this.spinner=new Spinner},startSpinner:function(){this.spinner.spin(document.getElementById("loading"))},stopSpinner:function(e){this.spinner.stop()},requestStart:function(e,t,s){this.startSpinner()},requestSuccess:function(e,t,s){this.stopSpinner()},requestError:function(e,t,s){this.stopSpinner()}}),t=Marionette.View.extend({template:"#assign-user-template",initialize:function(){_.bindAll(this,"handleSaveSuccess","handleSaveError")},events:{"click #save-button":"handleSave"},onRender:function(){this.$(".dropdown-select-ajax").select2({debug:!1,theme:"bootstrap",allowClear:!0})},handleSave:function(e){e.preventDefault(),this.$("#userAssigned").val()?this.model.save({userAssigned:{id:this.$("#userAssigned").val().trim()},status:"ASSIGNED"},{wait:!0,success:this.handleSaveSuccess,error:this.handleSaveError}):this.showValidationError("userAssigned","may not be null")},handleSaveSuccess:function(e,t){swal({title:"Request Updated!",text:"User has been assigned successfully.",type:"success"},function(){window.location.href="/requests/"+t.id})},handleSaveError:function(e,t){console.log(e,t),t.responseJSON&&_.each(t.responseJSON.errors,function(e,t){this.showValidationError(t,e)})},clearValidationErrors:function(){this.$(".form-group").removeClass("has-error has-feedback"),this.$(".help-block").remove()},showValidationError:function(e,t){var s=this.$("#"+e);s.closest(".form-group").addClass("has-error has-feedback"),s.closest("div").append($('<span id="'+e+'-error" class="help-block">'+t+"</span>"))}}),r=Marionette.View.extend({template:"#before-process-request-template",templateContext:function(){return{msg:this.options.msg,title:this.options.title}},initialize:function(){_.bindAll(this,"handleSaveSuccess","handleSaveError")},events:{"click #startProcessRequestButton":"start","click #cancelProcessRequestButton":"cancel"},start:function(e){e.preventDefault(),this.model.save({status:this.options.nextStatus},{wait:!0,success:this.handleSaveSuccess,error:this.handleSaveError})},cancel:function(e){e.preventDefault(),window.location.href="/requests/"},handleSaveSuccess:function(e,t){Backbone.history.navigate(t.id+"/workflow/"+this.options.navText,{trigger:!1}),this.options.nextViewFunction&&this.options.nextViewFunction.apply(this.options.rootView,[this.model])},handleSaveError:function(e,t){t.responseJSON.message&&this.showAlert([t.responseJSON.message],"danger")}}),s=Marionette.View.extend({template:"#close-request-template",events:{"click #cancelButton":"cancel"},cancel:function(e){e.preventDefault(),window.location.href="/requests/"}}),i=Marionette.View.extend({template:_.template('<div id="main"></div>'),regions:{main:"#main"},showAssignUserView:function(e){this.showChildView("main",new t({model:e,rootView:this}))},showBeforeProcessRequestView:function(e,t,s,n,i,o){this.showChildView("main",new r({model:e,rootView:this,title:t,msg:s,nextStatus:n,nextViewFunction:i,navText:o}))},showCloseRequestView:function(e){this.showChildView("main",new s({model:e,rootView:this}))},dummyFun:function(){window.location.href="/requests/"}}),o=Marionette.Object.extend({start:function(e,t){var s=new n({id:e});this.listenToOnce(s,"sync",this.workflow),s.fetch()},workflow:function(e){var t=this.getOption("rootView"),s=e.get("type"),n=e.get("status");"RETRIEVAL"===s&&("OPEN"===n?t.showAssignUserView(e):"ASSIGNED"===n?t.showBeforeProcessRequestView(e,"Proceed","Proceed with this request?","INPROGRESS",t.dummyFun,"dummy"):"CLOSED"===n&&t.showCloseRequestView(e))}}),a=Marionette.AppRouter.extend({initialize:function(e){this.controller=new o(e)},appRoutes:{":requestId/workflow":"start",":requestId/workflow/*splat":"start"}});(new(Marionette.Application.extend({region:"#app",onStart:function(){var e=new i;new a({rootView:e});this.showView(e),Backbone.history.start({pushState:!0,root:"/requests"})}}))).start()}();