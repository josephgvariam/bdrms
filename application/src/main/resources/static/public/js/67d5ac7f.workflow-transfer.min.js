!function(){var i=Backbone.Model.extend({urlRoot:function(){return this.get("type")?"/api/"+this.get("type").toLowerCase()+"requests":"/api/requests"},initialize:function(){this.listenTo(this,"request",this.requestStart),this.listenTo(this,"sync",this.requestSuccess),this.listenTo(this,"error",this.requestError),this.spinner=new Spinner},startSpinner:function(){this.spinner.spin(document.getElementById("loading"))},stopSpinner:function(e){this.spinner.stop()},requestStart:function(e,t,s){this.startSpinner()},requestSuccess:function(e,t,s){this.stopSpinner()},requestError:function(e,t,s){this.stopSpinner()}}),r=Backbone.Model.extend({defaults:{verified:!1}}),e=Backbone.Collection.extend({model:r}),o=Backbone.Model.extend({defaults:{barcode:"",location:""}}),t=Backbone.Collection.extend({model:o}),s=Marionette.View.extend({template:"#assign-user-template",templateContext:function(){return{title:this.options.title,label:this.options.label}},initialize:function(){_.bindAll(this,"handleSaveSuccess","handleSaveError")},events:{"click #save-button":"handleSave"},onRender:function(){this.$(".dropdown-select-ajax").select2({debug:!1,theme:"bootstrap",allowClear:!0})},handleSave:function(e){e.preventDefault(),this.$("#userAssigned").val()?this.model.save({userAssigned:{id:this.$("#userAssigned").val().trim()},status:this.options.requestNextStatus},{wait:!0,success:this.handleSaveSuccess,error:this.handleSaveError}):this.showValidationError("userAssigned","may not be null")},handleSaveSuccess:function(e,t){swal({title:"Request Updated!",text:"User has been assigned successfully.",type:"success"},function(){window.location.href="/requests/"+t.id})},handleSaveError:function(e,t){console.log(e,t),t.responseJSON&&_.each(t.responseJSON.errors,function(e,t){this.showValidationError(t,e)})},clearValidationErrors:function(){this.$(".form-group").removeClass("has-error has-feedback"),this.$(".help-block").remove()},showValidationError:function(e,t){var s=this.$("#"+e);s.closest(".form-group").addClass("has-error has-feedback"),s.closest("div").append($('<span id="'+e+'-error" class="help-block">'+t+"</span>"))}}),a=Marionette.View.extend({template:"#before-process-request-template",templateContext:function(){return{msg:this.options.msg,title:this.options.title}},initialize:function(){_.bindAll(this,"handleSaveSuccess","handleSaveError")},events:{"click #startProcessRequestButton":"start","click #cancelProcessRequestButton":"cancel"},start:function(e){e.preventDefault(),this.options.inventoryItemNextStatus&&_.each(this.model.get("inventoryItems"),function(e){e.status=this.options.inventoryItemNextStatus},this),this.model.save({status:this.options.requestNextStatus},{wait:!0,success:this.handleSaveSuccess,error:this.handleSaveError})},cancel:function(e){e.preventDefault(),window.location.href="/requests/"},handleSaveSuccess:function(e,t){Backbone.history.navigate(t.id+"/workflow/"+this.options.navText,{trigger:!1}),this.options.nextViewFunction&&this.options.nextViewFunction.apply(this.options.rootView,[this.model])},handleSaveError:function(e,t){t.responseJSON.message&&this.showAlert([t.responseJSON.message],"danger")}}),n=Marionette.View.extend({tagName:"li",className:function(){return"list-group-item list-group-item-"+(this.model.get("verified")?"success":"danger")},template:"#verify-records-row-template",templateContext:function(){return{isSystemRecordsView:this.isSystemRecordsView}},initialize:function(e){this.isSystemRecordsView=e.isSystemRecordsView},triggers:{"click .deleteScannedRecord":"delete:scanned:record"}}),c=Marionette.View.extend({template:_.template("No Records.")}),d=Marionette.CollectionView.extend({tagName:"ul",className:"list-group recordlist",childView:n,emptyView:c,childViewOptions:function(){return{isSystemRecordsView:this.options.isSystemRecordsView}},onChildviewDeleteScannedRecord:function(e){this.triggerMethod("delete:scanned:record",e.model)}}),l=Marionette.View.extend({template:"#verify-records-template",templateContext:function(){return{title:this.options.title}},events:{"change #recordBarcode":"addScanned","blur #recordBarcode":"focusBack"},focusBack:function(){this.$("#recordBarcode").val(""),this.$("#recordBarcode").focus()},regions:{scannedRecordsRegion:{el:"#scannedRecordsRegion",replaceElement:!0},systemRecordsRegion:{el:"#systemRecordsRegion",replaceElement:!0}},initialize:function(){_.bindAll(this,"handleSaveSuccess","handleSaveError","updateRequest"),this.systemRecords=new e,_.each(this.model.get("inventoryItems"),function(e){var t="";t="BOX"===e.type?e.boxBarcode:"FILE"===e.type?e.fileBarcode:e.documentBarcode;var s=new r({id:t,type:e.type,boxBarcode:e.boxBarcode,fileBarcode:e.fileBarcode,documentBarcode:e.documentBarcode,shelfBarcode:e.shelfBarcode});this.systemRecords.add(s)},this),this.scannedRecords=new e},addScanned:function(e){var t=this.$("#recordBarcode").val().toUpperCase().trim();if(this.$("#recordBarcode").val(""),this.$("#recordBarcode").focus(),t){var s=this.systemRecords.get(t),i=void 0!==s;!0===i&&(s.set("verified",!0),this.systemRecords.add(s),this.systemRecords.trigger("reset"));var o=new r({id:t,verified:i});this.scannedRecords.add(o),this.updateVerifyProgress()}},updateRequest:function(){this.options.inventoryItemNextStatus&&_.each(this.model.get("inventoryItems"),function(e){e.status=this.options.inventoryItemNextStatus},this),this.model.save({status:this.options.requestNextStatus},{wait:!0,success:this.handleSaveSuccess,error:this.handleSaveError})},handleSaveSuccess:function(e,t){swal({title:"Request Updated!",text:"Records are now validated.",type:"success"},function(){window.location.href="/requests/"+t.id})},handleSaveError:function(e,t,s){t.responseJSON.message&&(swal.close(),this.showAlert([t.responseJSON.message],"danger"))},updateVerifyProgress:function(){var e=this.systemRecords.where({verified:!0}),t=this.systemRecords.size(),s=this.scannedRecords.where({verified:!0}),i=this.scannedRecords.size(),o=parseInt(e.length/t*100),r=this.$("#recordsProgressbar");r.width(o+"%"),r.text(o+"%"),e.length===t&&s.length===i&&t===i&&swal({title:"All Records Verified!",text:"",type:"success",closeOnConfirm:!1},this.updateRequest)},onRender:function(){this.updateVerifyProgress(),this.showChildView("scannedRecordsRegion",new d({collection:this.scannedRecords,isSystemRecordsView:!1})),this.showChildView("systemRecordsRegion",new d({collection:this.systemRecords,isSystemRecordsView:!0}))},onChildviewDeleteScannedRecord:function(e){var t=e.id;this.scannedRecords.remove(e);var s=this.systemRecords.get(t);void 0!==s&&(s.set("verified",!1),this.systemRecords.trigger("reset")),this.updateVerifyProgress()},onAttach:function(){this.$("#recordBarcode").focus()}}),h=Marionette.View.extend({template:"#update-location-template",events:{"click #save-button":"handleSave"},handleSave:function(e){if(e.preventDefault(),this.$("#locationBarcode").val()){var t={requestId:this.model.get("id"),locationBarcode:this.$("#locationBarcode").val()};$.ajax({type:"POST",url:"/api/requests/updateLocation",data:t,success:this.handleSaveSuccess,error:this.handleSaveError})}else this.showValidationError("locationBarcode","may not be empty")},handleSaveSuccess:function(e,t,s){swal({title:"Request Updated!",text:"Location has been updated successfully.",type:"success"},function(){window.location.href="/requests/"+e.id})},handleSaveError:function(e,t,s){console.log(e,t,s)},clearValidationErrors:function(){this.$(".form-group").removeClass("has-error has-feedback"),this.$(".help-block").remove()},showValidationError:function(e,t){var s=this.$("#"+e);s.closest(".form-group").addClass("has-error has-feedback"),s.closest("div").append($('<span id="'+e+'-error" class="help-block">'+t+"</span>"))}}),u=Marionette.View.extend({tagName:"li",className:"list-group-item list-group-item-info",template:"#store-records-row-template",templateContext:function(){return{isStoredBoxesView:this.isStoredBoxesView}},initialize:function(e){this.isStoredBoxesView=e.isStoredBoxesView},triggers:{"click .deleteStoredBox":"delete:stored:box"}}),w=Marionette.View.extend({template:_.template("No Boxes. Start scanning boxes & shelves.")}),f=Marionette.CollectionView.extend({tagName:"ul",className:"list-group recordlist",childView:u,emptyView:w,childViewOptions:function(){return{isStoredBoxesView:this.options.isStoredBoxesView}},onChildviewDeleteStoredBox:function(e){this.triggerMethod("delete:stored:box",e.model)}}),p=Marionette.View.extend({template:"#store-records-template",events:{"change #validatedBoxBarcode":"storeBox"},focusBack:function(){this.$("#validatedBoxBarcode").val(""),this.$("#validatedBoxBarcode").focus()},regions:{validatedBoxesRegion:{el:"#validatedBoxesRegion",replaceElement:!0},storedBoxesRegion:{el:"#storedBoxesRegion",replaceElement:!0}},initialize:function(){_.bindAll(this,"handleSaveSuccess","handleSaveError","updateRequest"),this.validatedBoxes=new t,this.storedBoxes=new t,this.resetLists()},resetLists:function(){this.validatedBoxes.reset(),this.storedBoxes.reset();var t,s=this.model.get("storageType").name;_.each(this.model.get("inventoryItems"),function(e){t=new o("BOX"===s?e.box:"FILE"===s?e.file.box:e.document.file.box),this.validatedBoxes.add(t)},this)},storeBox:function(e){var t=this.$("#validatedBoxBarcode").val().trim().toUpperCase();if(this.$("#validatedBoxBarcode").val(""),t){var s=this.validatedBoxes.findWhere({barcode:t}),i=this;void 0!==s?swal({title:"Scan Shelf Barcode",text:"",type:"input",showCancelButton:!0,closeOnConfirm:1!==this.validatedBoxes.size(),inputPlaceholder:"Shelf Barcode"},function(e){return!1!==e&&(""===e?(swal.showInputError("Scan shelf!"),!1):(s.set("shelf",{barcode:e}),s.set("location",e),i.storedBoxes.add(s),i.validatedBoxes.remove(s),void i.updateStoreProgress()))}):swal({title:"Not a valid box!",text:"Barcode is not part of this request.",type:"error"})}},updateStoreProgress:function(){var e=this.validatedBoxes.size(),t=this.storedBoxes.size(),s=parseInt(t/(e+t)*100),i=this.$("#storeProgressbar");i.width(s+"%"),i.text(s+"%"),0===e&&this.updateRequest()},updateRequest:function(){this.storedBoxes.url="/api/boxes/batch",this.storedBoxes.sync("update",this.storedBoxes,{success:this.handleSaveSuccess,error:this.handleSaveError})},getLocation:function(e){return this.storedBoxes.findWhere({barcode:e}).get("location")},getFacility:function(e,t){for(var s=0;s<e.length;s++)if(e[s].barcode===t)return e[s].shelf.facility},handleSaveSuccess:function(t){var s=this.model.get("storageType").name;_.each(this.model.get("inventoryItems"),function(e){e.status="STORED","BOX"===s?(e.box.location=this.getLocation(e.box.barcode),e.facility=this.getFacility(t,e.box.barcode)):"FILE"===s?(e.file.location=this.getLocation(e.file.box.barcode),e.facility=this.getFacility(t,e.file.box.barcode)):(e.document.location=this.getLocation(e.document.file.box.barcode),e.facility=this.getFacility(t,e.document.file.box.barcode))},this),this.model.save({status:"STORED"},{wait:!0,success:this.handleSaveSuccess2,error:this.handleSaveError2})},handleSaveSuccess2:function(e,t){swal({title:"Request Updated!",text:"Records are now stored.",type:"success"},function(){window.location.href="/requests/"+t.id})},handleSaveError2:function(e,t){t.responseJSON.message&&(swal.close(),util.showAlert([t.responseJSON.message],"danger"))},handleSaveError:function(e){swal.close(),this.resetLists(),this.updateStoreProgress(),e.responseJSON&&e.responseJSON.message?util.showAlert("Error saving boxes",e.responseJSON.message,"danger"):util.showAlert("Error saving boxes",e,"danger")},onChildviewDeleteStoredBox:function(e){this.storedBoxes.remove(e),this.validatedBoxes.add(e),this.updateStoreProgress()},onRender:function(){this.updateStoreProgress(),this.showChildView("validatedBoxesRegion",new f({collection:this.validatedBoxes,isStoredBoxesView:!1})),this.showChildView("storedBoxesRegion",new f({collection:this.storedBoxes,isStoredBoxesView:!0}))},onAttach:function(){this.$("#validatedBoxBarcode").focus()}}),m=Marionette.View.extend({template:"#close-request-template",events:{"click #cancelButton":"cancel"},cancel:function(e){e.preventDefault(),window.location.href="/requests/"}}),S=Marionette.View.extend({template:_.template('<div id="main"></div>'),regions:{main:"#main"},showAssignUserView:function(e){this.showChildView("main",new s({model:e,rootView:this,title:"Assign User",label:"User",requestNextStatus:"ASSIGNED"}))},showBeforeProcessRequestView:function(e,t,s,i,o,r,n){this.showChildView("main",new a({model:e,rootView:this,title:t,msg:s,requestNextStatus:i,inventoryItemNextStatus:o,nextViewFunction:r,navText:n}))},showVerifyRecordsView:function(e){this.showChildView("main",new l({model:e,rootView:this,inventoryItemNextStatus:"FETCHED",requestNextStatus:"FETCHED",title:"Fetch Records"}))},showUpdateLocationView:function(e){this.showChildView("main",new h({model:e,rootView:this}))},showAssignRetrievalDeskUserView:function(e){this.showChildView("main",new s({model:e,rootView:this,title:"Assign Retrieval Desk User",label:"Retrieval Desk User",requestNextStatus:"ASSIGNED_RETRIEVAL_DESK"}))},showRetrievalDeskVerifyRecordsView:function(e){this.showChildView("main",new l({model:e,rootView:this,inventoryItemNextStatus:null,requestNextStatus:"ASSIGNED_LOGISTICS_DESK",title:"Validate Records"}))},showAssignDeliveryUserView:function(e){this.showChildView("main",new s({model:e,rootView:this,title:"Assign Delivery User",label:"Delivery User",requestNextStatus:"ASSIGNED_DELIVERY"}))},showVerifyIncomingRecordsView:function(e){this.showChildView("main",new l({model:e,rootView:this,inventoryItemNextStatus:"VALIDATED",requestNextStatus:"VALIDATED",title:"Validate Incoming Records"}))},showStoreRecordsView:function(e){this.showChildView("main",new p({model:e,rootView:this}))},showCloseRequestView:function(e){this.showChildView("main",new m({model:e,rootView:this}))}}),v=Marionette.Object.extend({start:function(e,t){var s=new i({id:e});this.listenToOnce(s,"sync",this.workflow),s.fetch()},workflow:function(e){var t=this.getOption("rootView"),s=e.get("type"),i=e.get("status");"TRANSFER"===s&&("OPEN"===i?t.showAssignUserView(e):"ASSIGNED"===i?t.showBeforeProcessRequestView(e,"Proceed","Proceed with this request?","INPROGRESS",null,t.showVerifyRecordsView,"verifyRecords"):"INPROGRESS"===i?t.showVerifyRecordsView(e):"FETCHED"===i?t.showUpdateLocationView(e):"PACKED"===i?t.showAssignRetrievalDeskUserView(e):"ASSIGNED_RETRIEVAL_DESK"===i?t.showRetrievalDeskVerifyRecordsView(e):"ASSIGNED_LOGISTICS_DESK"===i?t.showAssignDeliveryUserView(e):"ASSIGNED_DELIVERY"===i?t.showBeforeProcessRequestView(e,"Proceed","Proceed with this request?","TRANSIT","TRANSIT",null,"deliverySignoff"):"TRANSIT"===i?t.showBeforeProcessRequestView(e,"Verify Incoming Records","Proceed with verifying the incoming records for this request?","INCOMING","INCOMING",t.showVerifyIncomingRecordsView,"verifyIncomingRecords"):"INCOMING"===i?t.showVerifyIncomingRecordsView(e):"VALIDATED"===i?t.showStoreRecordsView(e):"STORED"===i?t.showBeforeProcessRequestView(e,"Close Request","Proceed with closing this request?","CLOSED",t.showCloseRequestView,""):"CLOSED"===i&&t.showCloseRequestView(e))}}),g=Marionette.AppRouter.extend({initialize:function(e){this.controller=new v(e)},appRoutes:{":requestId/workflow":"start",":requestId/workflow/*splat":"start"}});(new(Marionette.Application.extend({region:"#app",onStart:function(){var e=new S;new g({rootView:e});this.showView(e),Backbone.history.start({pushState:!0,root:"/requests"})}}))).start()}();