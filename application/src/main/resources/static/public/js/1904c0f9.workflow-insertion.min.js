!function(){var o=Backbone.Model.extend({urlRoot:function(){return this.get("type")?"/api/"+this.get("type").toLowerCase()+"requests":"/api/requests"},initialize:function(){this.listenTo(this,"request",this.requestStart),this.listenTo(this,"sync",this.requestSuccess),this.listenTo(this,"error",this.requestError),this.spinner=new Spinner},startSpinner:function(){this.spinner.spin(document.getElementById("loading"))},stopSpinner:function(e){this.spinner.stop()},requestStart:function(e,t,s){this.startSpinner()},requestSuccess:function(e,t,s){this.stopSpinner()},requestError:function(e,t,s){this.stopSpinner()}}),r=Backbone.Model.extend({defaults:{verified:!1}}),t=Backbone.Collection.extend({model:r}),a=Backbone.Model.extend({defaults:{ref1:"",ref2:"",ref3:"",ref4:"",ref5:"",status:null,type:null}}),e=Backbone.Collection.extend({model:a}),n=new e,d=new e,s=Marionette.View.extend({template:"#assign-user-template",templateContext:function(){return{title:this.options.title,label:this.options.label}},initialize:function(){_.bindAll(this,"handleSaveSuccess","handleSaveError")},events:{"click #save-button":"handleSave"},onRender:function(){this.$(".dropdown-select-ajax").select2({debug:!1,theme:"bootstrap",allowClear:!0})},handleSave:function(e){e.preventDefault(),this.$("#userAssigned").val()?this.model.save({userAssigned:{id:this.$("#userAssigned").val().trim()},status:this.options.requestNextStatus},{wait:!0,success:this.handleSaveSuccess,error:this.handleSaveError}):this.showValidationError("userAssigned","may not be null")},handleSaveSuccess:function(e,t){swal({title:"Request Updated!",text:"User has been assigned successfully.",type:"success"},function(){window.location.href="/requests/"+t.id})},handleSaveError:function(e,t){console.log(e,t),t.responseJSON&&_.each(t.responseJSON.errors,function(e,t){this.showValidationError(t,e)})},clearValidationErrors:function(){this.$(".form-group").removeClass("has-error has-feedback"),this.$(".help-block").remove()},showValidationError:function(e,t){var s=this.$("#"+e);s.closest(".form-group").addClass("has-error has-feedback"),s.closest("div").append($('<span id="'+e+'-error" class="help-block">'+t+"</span>"))}}),c=Marionette.View.extend({template:"#before-process-request-template",templateContext:function(){return{msg:this.options.msg,title:this.options.title}},initialize:function(){_.bindAll(this,"handleSaveSuccess","handleSaveError")},events:{"click #startProcessRequestButton":"start","click #cancelProcessRequestButton":"cancel"},start:function(e){e.preventDefault(),this.options.inventoryItemNextStatus&&_.each(this.model.get("inventoryItems"),function(e){e.status=this.options.inventoryItemNextStatus},this),this.model.save({status:this.options.requestNextStatus},{wait:!0,success:this.handleSaveSuccess,error:this.handleSaveError})},cancel:function(e){e.preventDefault(),window.location.href="/requests/"},handleSaveSuccess:function(e,t){Backbone.history.navigate(t.id+"/workflow/"+this.options.navText,{trigger:!1}),this.options.nextViewFunction&&(this.options.nextViewFunctionArgs?this.options.nextViewFunction.apply(this.options.rootView,this.options.nextViewFunctionArgs):this.options.nextViewFunction.apply(this.options.rootView,[this.model]))},handleSaveError:function(e,t){t.responseJSON.message&&this.showAlert([t.responseJSON.message],"danger")}}),i=Marionette.View.extend({tagName:"li",className:function(){return"list-group-item list-group-item-"+(this.model.get("verified")?"success":"danger")},template:"#verify-records-row-template",templateContext:function(){return{isSystemRecordsView:this.isSystemRecordsView}},initialize:function(e){this.isSystemRecordsView=e.isSystemRecordsView},triggers:{"click .deleteScannedRecord":"delete:scanned:record"}}),l=Marionette.View.extend({template:_.template("No Records.")}),h=Marionette.CollectionView.extend({tagName:"ul",className:"list-group recordlist",childView:i,emptyView:l,childViewOptions:function(){return{isSystemRecordsView:this.options.isSystemRecordsView}},onChildviewDeleteScannedRecord:function(e){this.triggerMethod("delete:scanned:record",e.model)}}),u=Marionette.View.extend({template:"#verify-records-template",templateContext:function(){return{title:this.options.title}},events:{"change #recordBarcode":"addScanned","blur #recordBarcode":"focusBack"},focusBack:function(){this.$("#recordBarcode").val(""),this.$("#recordBarcode").focus()},regions:{scannedRecordsRegion:{el:"#scannedRecordsRegion",replaceElement:!0},systemRecordsRegion:{el:"#systemRecordsRegion",replaceElement:!0}},initialize:function(){_.bindAll(this,"handleSaveSuccess","handleSaveError","updateRequest"),this.systemRecords=new t;var e=this.model.get("insertDocFileMapStr").split("&");_.each(e,function(e){var t=e.split("=")[0],s=new r({id:t,type:"FILE",boxBarcode:"",fileBarcode:"",documentBarcode:"",shelfBarcode:""});this.systemRecords.add(s)},this),this.scannedRecords=new t},addScanned:function(e){var t=this.$("#recordBarcode").val().toUpperCase().trim();if(this.$("#recordBarcode").val(""),this.$("#recordBarcode").focus(),t){var s=this.systemRecords.get(t),o=void 0!==s;!0===o&&(s.set("verified",!0),this.systemRecords.add(s),this.systemRecords.trigger("reset"));var i=new r({id:t,verified:o});this.scannedRecords.add(i),this.updateVerifyProgress()}},updateRequest:function(){this.model.save({status:this.options.requestNextStatus},{wait:!0,success:this.handleSaveSuccess,error:this.handleSaveError})},handleSaveSuccess:function(e,t){swal({title:"Request Updated!",text:"Records are now validated.",type:"success"},function(){window.location.href="/requests/"+t.id})},handleSaveError:function(e,t,s){t.responseJSON.message&&(swal.close(),this.showAlert([t.responseJSON.message],"danger"))},updateVerifyProgress:function(){var e=this.systemRecords.where({verified:!0}),t=this.systemRecords.size(),s=this.scannedRecords.where({verified:!0}),o=this.scannedRecords.size(),i=parseInt(e.length/t*100),r=this.$("#recordsProgressbar");r.width(i+"%"),r.text(i+"%"),e.length===t&&s.length===o&&t===o&&swal({title:"All Records Verified!",text:"",type:"success",closeOnConfirm:!1},this.updateRequest)},onRender:function(){this.updateVerifyProgress(),this.showChildView("scannedRecordsRegion",new h({collection:this.scannedRecords,isSystemRecordsView:!1})),this.showChildView("systemRecordsRegion",new h({collection:this.systemRecords,isSystemRecordsView:!0}))},onChildviewDeleteScannedRecord:function(e){var t=e.id;this.scannedRecords.remove(e);var s=this.systemRecords.get(t);void 0!==s&&(s.set("verified",!1),this.systemRecords.trigger("reset")),this.updateVerifyProgress()},onAttach:function(){this.$("#recordBarcode").focus()}}),w=(Marionette.View.extend({template:"#update-location-template",events:{"click #save-button":"handleSave"},handleSave:function(e){if(e.preventDefault(),this.$("#locationBarcode").val()){var t={requestId:this.model.get("id"),locationBarcode:this.$("#locationBarcode").val()};$.ajax({type:"POST",url:"/api/requests/updateLocation",data:t,success:this.handleSaveSuccess,error:this.handleSaveError})}else this.showValidationError("locationBarcode","may not be empty")},handleSaveSuccess:function(e,t,s){swal({title:"Request Updated!",text:"Location has been updated successfully.",type:"success"},function(){window.location.href="/requests/"+e.id})},handleSaveError:function(e,t,s){console.log(e,t,s)},clearValidationErrors:function(){this.$(".form-group").removeClass("has-error has-feedback"),this.$(".help-block").remove()},showValidationError:function(e,t){var s=this.$("#"+e);s.closest(".form-group").addClass("has-error has-feedback"),s.closest("div").append($('<span id="'+e+'-error" class="help-block">'+t+"</span>"))}}),Marionette.View.extend({tagName:"tr",template:"#record-row-template"})),f=Marionette.View.extend({template:_.template("No Records. Start adding records.")}),p=Marionette.CollectionView.extend({tagName:"tbody",childView:w,emptyView:f}),v=Marionette.View.extend({template:"#records-template",regions:{body:{el:"tbody",replaceElement:!0}},initialize:function(){},events:{"click #addRecordsButton":"showSelectFileModal","click #okSelectFileModalButton":"handleOkSelectFileButton","click #okScanDocModalButton":"handleOkScanDocButton","click #saveRequestButton":"handleSaveRequestButton"},getInsertDocFileMapStr:function(){var t=[];return _(n.models).each(function(e){t.push(e.get("id"))},this),t.join("&")},handleSaveRequestButton:function(e){if(0===n.size())return e.preventDefault(),void swal("Error!","Please add records!","error");this.model.save({status:"PACKED",insertDocFileMapStr:this.getInsertDocFileMapStr(),inventoryItems:d},{wait:!0,success:this.handleSaveSuccess,error:this.handleSaveError})},handleSaveSuccess:function(e,t){swal({title:"Request Updated!",text:"Documents for insertion have been saved.",type:"success"},function(){window.location.href="/requests/"+t.id})},handleSaveError:function(e,t){console.log(e,t)},handleOkScanDocButton:function(e){var t=$("#documentBarcode").val().toUpperCase();if(!t)return e.preventDefault(),void swal("Error!","Please scan a document barcode!","error");var s=this.$("#recordsDataTable").DataTable().rows([".selected"]).data().toArray()[0],o=jQuery.extend(!0,{},s),i=jQuery.extend(!0,{},s);d.add(new a(o)),i.id=t+"="+s.fileBarcode,i.documentBarcode=t;var r=new a(i);n.add(r),this.$("#scanDocModal").modal("hide")},handleOkSelectFileButton:function(e){if(!this.$("#recordsDataTable").DataTable().rows([".selected"]).data().toArray()[0])return e.preventDefault(),void swal("Error!","Please select a File","error");this.$("#selectFileModal").modal("hide"),this.$("#scanDocModal").modal({show:!0,backdrop:"static",keyboard:!1})},showSelectFileModal:function(e){e.preventDefault();var t=this.model.get("id");this.$("#selectFileModal").modal({show:!0,backdrop:"static",keyboard:!1});var s="/api/inventoryitems?storageType=FILE&requestType=INSERTION&fromFacilityId=&requestId="+t;this.$("#recordsDataTable").DataTable({retrieve:!0,searching:!0,ordering:!1,rowId:"id",ajax:{url:s,dataSrc:""},columns:[{data:"id"},{data:"id"},{data:"FILE".toLowerCase()+"Barcode"},{data:"ref1"},{data:"ref2"},{data:"ref3"},{data:"ref4"},{data:"ref5"}],columnDefs:[{targets:0,checkboxes:{selectRow:!0}}],select:{style:"single"},createdRow:function(e,t,s){var o="";o="DOCUMENT"===t.type?t.documentBarcode:"FILE"===t.type?t.fileBarcode:t.boxBarcode,$(e).attr("data-barcode",o)}}).rows({selected:!0}).deselect()},onRender:function(){this.showChildView("body",new p({collection:n}))},onAttach:function(){var e=this.$("#scanDocModal");e.on("show.bs.modal",function(e){$("#documentBarcode").val("")}),e.on("shown.bs.modal",function(e){$("#documentBarcode").focus()})}}),m=Marionette.View.extend({tagName:"li",className:"list-group-item list-group-item-info",template:"#restore-records-row-template",templateContext:function(){return{isStoredRecordsView:this.isStoredRecordsView}},initialize:function(e){this.isStoredRecordsView=e.isStoredRecordsView},triggers:{"click .deleteStoredRecord":"delete:stored:record"}}),R=Marionette.View.extend({template:_.template("No Records.")}),g=Marionette.CollectionView.extend({tagName:"ul",className:"list-group recordlist",childView:m,emptyView:R,childViewOptions:function(){return{isStoredRecordsView:this.options.isStoredRecordsView}},onChildviewDeleteStoredRecord:function(e){this.triggerMethod("delete:stored:record",e.model)}}),S=Marionette.View.extend({template:"#restore-records-template",events:{"change #validatedRecordBarcode":"storeRecord","click #verifyRestoreButton":"verifyRestore"},focusBack:function(){this.$("#validatedRecordBarcode").val(""),this.$("#validatedRecordBarcode").focus()},regions:{validatedRecordsRegion:{el:"#validatedRecordsRegion",replaceElement:!0},storedRecordsRegion:{el:"#storedRecordsRegion",replaceElement:!0}},initialize:function(){_.bindAll(this,"updateRequest"),this.validatedRecords=new t,this.storedRecords=new t,this.resetLists()},resetLists:function(){this.validatedRecords.reset(),this.storedRecords.reset();var e=this.model.get("insertInventoryItems");_.each(e,function(e){var t=new r({id:e.documentBarcode,boxBarcode:e.boxBarcode,fileBarcode:e.fileBarcode,shelfBarcode:e.shelfBarcode,type:"DOCUMENT"});this.validatedRecords.add(t)},this)},storeRecord:function(e){var t=this.$("#validatedRecordBarcode").val().trim().toUpperCase();if(this.$("#validatedRecordBarcode").val(""),t){var s=this.validatedRecords.get(t);if(void 0!==s){var o=$("#verifyRestoreModal");o.data("inventoryItemBarcode",t),o.data("inventoryItemType",s.get("type")),o.data("shelfBarcode",s.get("shelfBarcode")),o.data("boxBarcode",s.get("boxBarcode")),o.data("fileBarcode",s.get("fileBarcode")),o.data("documentBarcode",s.get("documentBarcode")),o.on("show.bs.modal",function(e){var t=s.get("type");o.find("#verifyRestoreModalItemLabel").text(t.toLowerCase().charAt(0).toUpperCase()+t.toLowerCase().slice(1)+" Barcode"),o.find("#verifyRestoreModalItemBarcode").val(s.get("id")),o.find("#documentBarcode").val(""),o.find("#fileBarcode").val(""),o.find("#boxBarcode").val(""),o.find("#shelfBarcode").val("")}),o.on("hide.bs.modal",function(e){o.find(".form-group").removeClass("has-error has-feedback"),o.find(".help-block").remove()}),o.modal("show")}else swal({title:"Not a valid record!",text:"Barcode is not part of this request.",type:"error"})}},verifyRestore:function(e){e.preventDefault();var t=$("#verifyRestoreModal"),s=t.data("inventoryItemBarcode"),o=(t.data("inventoryItemType"),t.data("shelfBarcode")),i=t.data("boxBarcode"),r=t.data("fileBarcode"),a=(t.data("documentBarcode"),this.$("#fileBarcode").val()),n=this.$("#boxBarcode").val(),d=this.$("#shelfBarcode").val();this.clearVerifyRestoreModalValidationErrors();var c=!0;if(a!==r&&(this.showVerifyRestoreModalValidationError("fileBarcode","Invalid File Barcode"),c=!1),n!==i&&(this.showVerifyRestoreModalValidationError("boxBarcode","Invalid Box Barcode"),c=!1),d!==o&&(this.showVerifyRestoreModalValidationError("shelfBarcode","Invalid Shelf Barcode"),c=!1),c){t.modal("hide");var l=this;swal({title:"Restore Verified!",text:"Record has been inserted successfully.",type:"success"},function(){swal.close();var e=l.validatedRecords.get(s);e.set("location",d),l.storedRecords.add(e),l.validatedRecords.remove(e),l.updateStoreProgress()})}},clearVerifyRestoreModalValidationErrors:function(){this.$(".form-group").removeClass("has-error has-feedback"),this.$(".help-block").remove()},showVerifyRestoreModalValidationError:function(e,t){var s=this.$("#"+e);s.closest(".form-group").addClass("has-error has-feedback"),s.closest("div").append($('<span id="'+e+'-error" class="help-block">'+t+"</span>"))},updateStoreProgress:function(){var e=this.validatedRecords.size(),t=this.storedRecords.size(),s=parseInt(t/(e+t)*100),o=this.$("#storeProgressbar");o.width(s+"%"),o.text(s+"%"),0===e&&this.updateRequest()},getLocation:function(e){return this.storedRecords.get(e).get("location")},updateRequest:function(){this.model.get("storageType").name;this.model.save({status:"STORED"},{wait:!0,success:this.handleSaveSuccess,error:this.handleSaveError})},handleSaveSuccess:function(e,t){swal({title:"Request Updated!",text:"Records are now inserted.",type:"success"},function(){window.location.href="/requests/"+t.id})},handleSaveError:function(e,t){console.log(t)},onChildviewDeletestoredRecord:function(e){this.storedRecords.remove(e),this.validatedRecords.add(e),this.updateStoreProgress()},onRender:function(){this.showChildView("validatedRecordsRegion",new g({collection:this.validatedRecords,isstoredRecordsView:!1})),this.showChildView("storedRecordsRegion",new g({collection:this.storedRecords,isstoredRecordsView:!0}))},onAttach:function(){this.$("#validatedRecordBarcode").focus()}}),V=Marionette.View.extend({template:"#close-request-template",events:{"click #cancelButton":"cancel"},cancel:function(e){e.preventDefault(),window.location.href="/requests/"}}),y=Marionette.View.extend({template:_.template('<div id="main"></div>'),regions:{main:"#main"},showAssignUserView:function(e){this.showChildView("main",new s({model:e,rootView:this,title:"Assign User",label:"User",requestNextStatus:"ASSIGNED"}))},showBeforeProcessRequestView:function(e,t,s,o,i,r,a,n){this.showChildView("main",new c({model:e,rootView:this,title:t,msg:s,requestNextStatus:o,inventoryItemNextStatus:i,nextViewFunction:r,navText:a,nextViewFunctionArgs:n}))},showAddRecordsView:function(e){this.showChildView("main",new v({model:e,rootView:this}))},showVerifyIncomingRecordsView:function(e){this.showChildView("main",new u({model:e,rootView:this,inventoryItemNextStatus:"VALIDATED",requestNextStatus:"VALIDATED",title:"Validate Incoming Records"}))},showAssignRackManagementUserView:function(e){this.showChildView("main",new s({model:e,rootView:this,title:"Assign Rack Management User",label:"Rack Management User",requestNextStatus:"ASSIGNED_RACK_MANAGEMENT"}))},showInsertRecordsView:function(e){this.showChildView("main",new S({model:e,rootView:this}))},showCloseRequestView:function(e){this.showChildView("main",new V({model:e,rootView:this}))}}),B=Marionette.Object.extend({start:function(e,t){var s=new o({id:e});this.listenToOnce(s,"sync",this.workflow),s.fetch()},workflow:function(e){var t=this.getOption("rootView"),s=e.get("type"),o=e.get("status");"INSERTION"===s&&("OPEN"===o?t.showAssignUserView(e):"ASSIGNED"===o?t.showBeforeProcessRequestView(e,"Proceed","Proceed with this request?","INPROGRESS",null,t.showAddRecordsView,"addRecords"):"INPROGRESS"===o?t.showAddRecordsView(e):"PACKED"===o?(nextViewFunctionArgs=[e,"Verify Incoming Records","Proceed with verifying the incoming records for this request?","INCOMING","INCOMING",t.showVerifyIncomingRecordsView,"verifyIncomingRecords"],t.showBeforeProcessRequestView(e,"Proceed","Proceed with this request?","TRANSIT","TRANSIT",t.showBeforeProcessRequestView,"transitRecords",nextViewFunctionArgs)):"TRANSIT"===o?t.showBeforeProcessRequestView(e,"Verify Incoming Records","Proceed with verifying the incoming records for this request?","INCOMING","INCOMING",t.showVerifyIncomingRecordsView,"verifyIncomingRecords"):"INCOMING"===o?t.showVerifyIncomingRecordsView(e):"VALIDATED"===o?t.showAssignRackManagementUserView(e):"ASSIGNED_RACK_MANAGEMENT"===o?t.showBeforeProcessRequestView(e,"Proceed","Proceed with this request?","INSERTING","INSERTING",t.showInsertRecordsView,"insertingRecords"):"INSERTING"===o?t.showInsertRecordsView(e):"STORED"===o?t.showBeforeProcessRequestView(e,"Close Request","Proceed with closing this request?","CLOSED",null,t.showCloseRequestView,""):"CLOSED"===o&&t.showCloseRequestView(e))}}),x=Marionette.AppRouter.extend({initialize:function(e){this.controller=new B(e)},appRoutes:{":requestId/workflow":"start",":requestId/workflow/*splat":"start"}});(new(Marionette.Application.extend({region:"#app",onStart:function(){var e=new y;new x({rootView:e});this.showView(e),Backbone.history.start({pushState:!0,root:"/requests"})}}))).start()}();